
/*  Â© Copyright CERN, 2015. All rights not expressly granted are reserved.

    The stub of this file was generated by Quasar (additional info: using transform designToDeviceBody.xslt)
    on 2020-04-01T14:54:15.251+02:00

    Quasar is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public Licence as published by
    the Free Software Foundation, either version 3 of the Licence.
    Quasar is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public Licence for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Quasar.  If not, see <http://www.gnu.org/licenses/>.



 */




#include <Configuration.hxx>

#include <DTestClass.h>
#include <ASTestClass.h>





namespace Device
{




// 1111111111111111111111111111111111111111111111111111111111111111111111111
// 1     GENERATED CODE STARTS HERE AND FINISHES AT SECTION 2              1
// 1     Users don't modify this code!!!!                                  1
// 1     If you modify this code you may start a fire or a flood somewhere,1
// 1     and some human being may possible cease to exist. You don't want  1
// 1     to be charged with that!                                          1
// 1111111111111111111111111111111111111111111111111111111111111111111111111






// 2222222222222222222222222222222222222222222222222222222222222222222222222
// 2     SEMI CUSTOM CODE STARTS HERE AND FINISHES AT SECTION 3            2
// 2     (code for which only stubs were generated automatically)          2
// 2     You should add the implementation but dont alter the headers      2
// 2     (apart from constructor, in which you should complete initializati2
// 2     on list)                                                          2
// 2222222222222222222222222222222222222222222222222222222222222222222222222

/* sample ctr */
DTestClass::DTestClass (
    const Configuration::TestClass & config,
    Parent_DTestClass * parent
):
    Base_DTestClass( config, parent)

/* fill up constructor initialization list here */
{
    /* fill up constructor body here */
}

/* sample dtr */
DTestClass::~DTestClass ()
{
}

/* delegators for cachevariables and externalvariables */

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaBoolean_scalar_delegated_nullForbidden ( const OpcUa_Boolean & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaByte_scalar_delegated_nullForbidden ( const OpcUa_Byte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaSByte_scalar_delegated_nullForbidden ( const OpcUa_SByte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt16_scalar_delegated_nullForbidden ( const OpcUa_UInt16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt16_scalar_delegated_nullForbidden ( const OpcUa_Int16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt32_scalar_delegated_nullForbidden ( const OpcUa_UInt32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt32_scalar_delegated_nullForbidden ( const OpcUa_Int32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt64_scalar_delegated_nullForbidden ( const OpcUa_UInt64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt64_scalar_delegated_nullForbidden ( const OpcUa_Int64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaDouble_scalar_delegated_nullForbidden ( const OpcUa_Double & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaFloat_scalar_delegated_nullForbidden ( const OpcUa_Float & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_UaString_scalar_delegated_nullForbidden ( const UaString & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaBoolean_scalar_delegated_nullAllowed ( const OpcUa_Boolean & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaByte_scalar_delegated_nullAllowed ( const OpcUa_Byte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaSByte_scalar_delegated_nullAllowed ( const OpcUa_SByte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt16_scalar_delegated_nullAllowed ( const OpcUa_UInt16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt16_scalar_delegated_nullAllowed ( const OpcUa_Int16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt32_scalar_delegated_nullAllowed ( const OpcUa_UInt32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt32_scalar_delegated_nullAllowed ( const OpcUa_Int32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt64_scalar_delegated_nullAllowed ( const OpcUa_UInt64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt64_scalar_delegated_nullAllowed ( const OpcUa_Int64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaDouble_scalar_delegated_nullAllowed ( const OpcUa_Double & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaFloat_scalar_delegated_nullAllowed ( const OpcUa_Float & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_UaString_scalar_delegated_nullAllowed ( const UaString & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaBoolean_array_delegated_nullForbidden ( const std::vector<OpcUa_Boolean> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaByte_array_delegated_nullForbidden ( const std::vector<OpcUa_Byte> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaSByte_array_delegated_nullForbidden ( const std::vector<OpcUa_SByte> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt16_array_delegated_nullForbidden ( const std::vector<OpcUa_UInt16> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt16_array_delegated_nullForbidden ( const std::vector<OpcUa_Int16> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt32_array_delegated_nullForbidden ( const std::vector<OpcUa_UInt32> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt32_array_delegated_nullForbidden ( const std::vector<OpcUa_Int32> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt64_array_delegated_nullForbidden ( const std::vector<OpcUa_UInt64> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt64_array_delegated_nullForbidden ( const std::vector<OpcUa_Int64> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaDouble_array_delegated_nullForbidden ( const std::vector<OpcUa_Double> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaFloat_array_delegated_nullForbidden ( const std::vector<OpcUa_Float> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_UaString_array_delegated_nullForbidden ( const std::vector<UaString> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaBoolean_array_delegated_nullAllowed ( const std::vector<OpcUa_Boolean> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaByte_array_delegated_nullAllowed ( const std::vector<OpcUa_Byte> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaSByte_array_delegated_nullAllowed ( const std::vector<OpcUa_SByte> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt16_array_delegated_nullAllowed ( const std::vector<OpcUa_UInt16> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt16_array_delegated_nullAllowed ( const std::vector<OpcUa_Int16> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt32_array_delegated_nullAllowed ( const std::vector<OpcUa_UInt32> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt32_array_delegated_nullAllowed ( const std::vector<OpcUa_Int32> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaUInt64_array_delegated_nullAllowed ( const std::vector<OpcUa_UInt64> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaInt64_array_delegated_nullAllowed ( const std::vector<OpcUa_Int64> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaDouble_array_delegated_nullAllowed ( const std::vector<OpcUa_Double> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_OpcUaFloat_array_delegated_nullAllowed ( const std::vector<OpcUa_Float> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeConfiguration_UaString_array_delegated_nullAllowed ( const std::vector<UaString> & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaBoolean_scalar_delegated_nullForbidden ( const OpcUa_Boolean & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaByte_scalar_delegated_nullForbidden ( const OpcUa_Byte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaSByte_scalar_delegated_nullForbidden ( const OpcUa_SByte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaUInt16_scalar_delegated_nullForbidden ( const OpcUa_UInt16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaInt16_scalar_delegated_nullForbidden ( const OpcUa_Int16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaUInt32_scalar_delegated_nullForbidden ( const OpcUa_UInt32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaInt32_scalar_delegated_nullForbidden ( const OpcUa_Int32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaUInt64_scalar_delegated_nullForbidden ( const OpcUa_UInt64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaInt64_scalar_delegated_nullForbidden ( const OpcUa_Int64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaDouble_scalar_delegated_nullForbidden ( const OpcUa_Double & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaFloat_scalar_delegated_nullForbidden ( const OpcUa_Float & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_UaString_scalar_delegated_nullForbidden ( const UaString & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaBoolean_scalar_delegated_nullAllowed ( const OpcUa_Boolean & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaByte_scalar_delegated_nullAllowed ( const OpcUa_Byte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaSByte_scalar_delegated_nullAllowed ( const OpcUa_SByte & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaUInt16_scalar_delegated_nullAllowed ( const OpcUa_UInt16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaInt16_scalar_delegated_nullAllowed ( const OpcUa_Int16 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaUInt32_scalar_delegated_nullAllowed ( const OpcUa_UInt32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaInt32_scalar_delegated_nullAllowed ( const OpcUa_Int32 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaUInt64_scalar_delegated_nullAllowed ( const OpcUa_UInt64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaInt64_scalar_delegated_nullAllowed ( const OpcUa_Int64 & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaDouble_scalar_delegated_nullAllowed ( const OpcUa_Double & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_OpcUaFloat_scalar_delegated_nullAllowed ( const OpcUa_Float & v)

{
    return OpcUa_Good;
}

/* Note: never directly call this function. */

UaStatus DTestClass::writeValueAndStatus_UaString_scalar_delegated_nullAllowed ( const UaString & v)

{
    return OpcUa_Good;
}


// 3333333333333333333333333333333333333333333333333333333333333333333333333
// 3     FULLY CUSTOM CODE STARTS HERE                                     3
// 3     Below you put bodies for custom methods defined for this class.   3
// 3     You can do whatever you want, but please be decent.               3
// 3333333333333333333333333333333333333333333333333333333333333333333333333

void DTestClass::testSettersGetters ()
{
    {   // scenario name: configuration_OpcUaBoolean_scalar_forbidden_nullForbidden
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaBoolean_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaBoolean_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaByte_scalar_forbidden_nullForbidden
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaByte_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaByte_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaByte_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaSByte_scalar_forbidden_nullForbidden
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaSByte_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaSByte_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaUInt16_scalar_forbidden_nullForbidden
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt16_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaUInt16_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaInt16_scalar_forbidden_nullForbidden
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt16_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaInt16_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaUInt32_scalar_forbidden_nullForbidden
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt32_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaUInt32_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaInt32_scalar_forbidden_nullForbidden
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt32_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaInt32_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaUInt64_scalar_forbidden_nullForbidden
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt64_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaUInt64_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaInt64_scalar_forbidden_nullForbidden
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt64_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaInt64_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaDouble_scalar_forbidden_nullForbidden
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaDouble_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaDouble_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaFloat_scalar_forbidden_nullForbidden
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaFloat_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaFloat_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_UaString_scalar_forbidden_nullForbidden
        UaString test_value ("abcde");
        getAddressSpaceLink()->setConfiguration_UaString_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_UaString_scalar_forbidden_nullForbidden();
    } // scenario name: configuration_UaString_scalar_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaBoolean_scalar_forbidden_nullAllowed
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaBoolean_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaBoolean_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaByte_scalar_forbidden_nullAllowed
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaByte_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaByte_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaByte_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaSByte_scalar_forbidden_nullAllowed
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaSByte_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaSByte_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaUInt16_scalar_forbidden_nullAllowed
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt16_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt16_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaInt16_scalar_forbidden_nullAllowed
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt16_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt16_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaUInt32_scalar_forbidden_nullAllowed
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt32_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt32_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaInt32_scalar_forbidden_nullAllowed
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt32_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt32_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaUInt64_scalar_forbidden_nullAllowed
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt64_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt64_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaInt64_scalar_forbidden_nullAllowed
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt64_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt64_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaDouble_scalar_forbidden_nullAllowed
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaDouble_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaDouble_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaFloat_scalar_forbidden_nullAllowed
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaFloat_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaFloat_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_UaString_scalar_forbidden_nullAllowed
        UaString test_value ("abcde");
        getAddressSpaceLink()->setConfiguration_UaString_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_UaString_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_UaString_scalar_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaBoolean_array_forbidden_nullForbidden
        std::vector<OpcUa_Boolean> test_value ({ OpcUa_True });
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaBoolean_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaBoolean_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaByte_array_forbidden_nullForbidden
        std::vector<OpcUa_Byte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaByte_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaByte_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaByte_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaSByte_array_forbidden_nullForbidden
        std::vector<OpcUa_SByte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaSByte_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaSByte_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaUInt16_array_forbidden_nullForbidden
        std::vector<OpcUa_UInt16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt16_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaUInt16_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaInt16_array_forbidden_nullForbidden
        std::vector<OpcUa_Int16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt16_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaInt16_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaUInt32_array_forbidden_nullForbidden
        std::vector<OpcUa_UInt32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt32_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaUInt32_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaInt32_array_forbidden_nullForbidden
        std::vector<OpcUa_Int32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt32_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaInt32_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaUInt64_array_forbidden_nullForbidden
        std::vector<OpcUa_UInt64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt64_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaUInt64_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaInt64_array_forbidden_nullForbidden
        std::vector<OpcUa_Int64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt64_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaInt64_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaDouble_array_forbidden_nullForbidden
        std::vector<OpcUa_Double> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaDouble_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaDouble_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaFloat_array_forbidden_nullForbidden
        std::vector<OpcUa_Float> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaFloat_array_forbidden_nullForbidden();
    } // scenario name: configuration_OpcUaFloat_array_forbidden_nullForbidden
    {   // scenario name: configuration_UaString_array_forbidden_nullForbidden
        std::vector<UaString> test_value ({ "abcde" });
        getAddressSpaceLink()->setConfiguration_UaString_array_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_array_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_UaString_array_forbidden_nullForbidden();
    } // scenario name: configuration_UaString_array_forbidden_nullForbidden
    {   // scenario name: configuration_OpcUaBoolean_array_forbidden_nullAllowed
        std::vector<OpcUa_Boolean> test_value ({ OpcUa_True });
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaBoolean_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaBoolean_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaByte_array_forbidden_nullAllowed
        std::vector<OpcUa_Byte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaByte_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaByte_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaByte_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaSByte_array_forbidden_nullAllowed
        std::vector<OpcUa_SByte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaSByte_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaSByte_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaUInt16_array_forbidden_nullAllowed
        std::vector<OpcUa_UInt16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt16_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt16_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaInt16_array_forbidden_nullAllowed
        std::vector<OpcUa_Int16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt16_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt16_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaUInt32_array_forbidden_nullAllowed
        std::vector<OpcUa_UInt32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt32_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt32_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaInt32_array_forbidden_nullAllowed
        std::vector<OpcUa_Int32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt32_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt32_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaUInt64_array_forbidden_nullAllowed
        std::vector<OpcUa_UInt64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt64_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt64_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaInt64_array_forbidden_nullAllowed
        std::vector<OpcUa_Int64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt64_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt64_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaDouble_array_forbidden_nullAllowed
        std::vector<OpcUa_Double> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaDouble_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaDouble_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaFloat_array_forbidden_nullAllowed
        std::vector<OpcUa_Float> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaFloat_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaFloat_array_forbidden_nullAllowed
    {   // scenario name: configuration_UaString_array_forbidden_nullAllowed
        std::vector<UaString> test_value ({ "abcde" });
        getAddressSpaceLink()->setConfiguration_UaString_array_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_array_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_UaString_array_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_UaString_array_forbidden_nullAllowed
    {   // scenario name: configuration_OpcUaBoolean_scalar_delegated_nullForbidden
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaBoolean_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaBoolean_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaByte_scalar_delegated_nullForbidden
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaByte_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaByte_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaByte_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaSByte_scalar_delegated_nullForbidden
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaSByte_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaSByte_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaUInt16_scalar_delegated_nullForbidden
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt16_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaUInt16_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaInt16_scalar_delegated_nullForbidden
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt16_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaInt16_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaUInt32_scalar_delegated_nullForbidden
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt32_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaUInt32_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaInt32_scalar_delegated_nullForbidden
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt32_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaInt32_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaUInt64_scalar_delegated_nullForbidden
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt64_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaUInt64_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaInt64_scalar_delegated_nullForbidden
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt64_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaInt64_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaDouble_scalar_delegated_nullForbidden
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaDouble_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaDouble_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaFloat_scalar_delegated_nullForbidden
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaFloat_scalar_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaFloat_scalar_delegated_nullForbidden
    {   // scenario name: configuration_UaString_scalar_delegated_nullForbidden
        UaString test_value ("abcde");
        getAddressSpaceLink()->setConfiguration_UaString_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_UaString_scalar_delegated_nullForbidden();
    } // scenario name: configuration_UaString_scalar_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaBoolean_scalar_delegated_nullAllowed
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaBoolean_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaBoolean_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaByte_scalar_delegated_nullAllowed
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaByte_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaByte_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaByte_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaSByte_scalar_delegated_nullAllowed
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaSByte_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaSByte_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaUInt16_scalar_delegated_nullAllowed
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt16_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt16_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaInt16_scalar_delegated_nullAllowed
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt16_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt16_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaUInt32_scalar_delegated_nullAllowed
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt32_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt32_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaInt32_scalar_delegated_nullAllowed
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt32_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt32_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaUInt64_scalar_delegated_nullAllowed
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt64_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt64_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaInt64_scalar_delegated_nullAllowed
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt64_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt64_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaDouble_scalar_delegated_nullAllowed
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaDouble_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaDouble_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaFloat_scalar_delegated_nullAllowed
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaFloat_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaFloat_scalar_delegated_nullAllowed
    {   // scenario name: configuration_UaString_scalar_delegated_nullAllowed
        UaString test_value ("abcde");
        getAddressSpaceLink()->setConfiguration_UaString_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_UaString_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_UaString_scalar_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaBoolean_array_delegated_nullForbidden
        std::vector<OpcUa_Boolean> test_value ({ OpcUa_True });
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaBoolean_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaBoolean_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaByte_array_delegated_nullForbidden
        std::vector<OpcUa_Byte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaByte_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaByte_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaByte_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaSByte_array_delegated_nullForbidden
        std::vector<OpcUa_SByte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaSByte_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaSByte_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaUInt16_array_delegated_nullForbidden
        std::vector<OpcUa_UInt16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt16_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaUInt16_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaInt16_array_delegated_nullForbidden
        std::vector<OpcUa_Int16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt16_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaInt16_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaUInt32_array_delegated_nullForbidden
        std::vector<OpcUa_UInt32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt32_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaUInt32_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaInt32_array_delegated_nullForbidden
        std::vector<OpcUa_Int32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt32_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaInt32_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaUInt64_array_delegated_nullForbidden
        std::vector<OpcUa_UInt64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaUInt64_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaUInt64_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaInt64_array_delegated_nullForbidden
        std::vector<OpcUa_Int64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaInt64_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaInt64_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaDouble_array_delegated_nullForbidden
        std::vector<OpcUa_Double> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaDouble_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaDouble_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaFloat_array_delegated_nullForbidden
        std::vector<OpcUa_Float> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_OpcUaFloat_array_delegated_nullForbidden();
    } // scenario name: configuration_OpcUaFloat_array_delegated_nullForbidden
    {   // scenario name: configuration_UaString_array_delegated_nullForbidden
        std::vector<UaString> test_value ({ "abcde" });
        getAddressSpaceLink()->setConfiguration_UaString_array_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_array_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getConfiguration_UaString_array_delegated_nullForbidden();
    } // scenario name: configuration_UaString_array_delegated_nullForbidden
    {   // scenario name: configuration_OpcUaBoolean_array_delegated_nullAllowed
        std::vector<OpcUa_Boolean> test_value ({ OpcUa_True });
        getAddressSpaceLink()->setConfiguration_OpcUaBoolean_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaBoolean_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaBoolean_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaBoolean_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaByte_array_delegated_nullAllowed
        std::vector<OpcUa_Byte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaByte_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaByte_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaByte_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaByte_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaSByte_array_delegated_nullAllowed
        std::vector<OpcUa_SByte> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaSByte_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaSByte_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaSByte_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaSByte_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaUInt16_array_delegated_nullAllowed
        std::vector<OpcUa_UInt16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt16_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt16_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt16_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt16_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaInt16_array_delegated_nullAllowed
        std::vector<OpcUa_Int16> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt16_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt16_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt16_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt16_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaUInt32_array_delegated_nullAllowed
        std::vector<OpcUa_UInt32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt32_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt32_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt32_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt32_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaInt32_array_delegated_nullAllowed
        std::vector<OpcUa_Int32> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt32_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt32_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt32_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt32_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaUInt64_array_delegated_nullAllowed
        std::vector<OpcUa_UInt64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaUInt64_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaUInt64_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaUInt64_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaUInt64_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaInt64_array_delegated_nullAllowed
        std::vector<OpcUa_Int64> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaInt64_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaInt64_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaInt64_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaInt64_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaDouble_array_delegated_nullAllowed
        std::vector<OpcUa_Double> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaDouble_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaDouble_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaDouble_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaDouble_array_delegated_nullAllowed
    {   // scenario name: configuration_OpcUaFloat_array_delegated_nullAllowed
        std::vector<OpcUa_Float> test_value ({ 69 });
        getAddressSpaceLink()->setConfiguration_OpcUaFloat_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_OpcUaFloat_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_OpcUaFloat_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_OpcUaFloat_array_delegated_nullAllowed
    {   // scenario name: configuration_UaString_array_delegated_nullAllowed
        std::vector<UaString> test_value ({ "abcde" });
        getAddressSpaceLink()->setConfiguration_UaString_array_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getConfiguration_UaString_array_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullConfiguration_UaString_array_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: configuration_UaString_array_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaBoolean_scalar_forbidden_nullForbidden
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setValueAndStatus_OpcUaBoolean_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaBoolean_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaBoolean_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaBoolean_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaByte_scalar_forbidden_nullForbidden
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaByte_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaByte_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaByte_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaByte_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaSByte_scalar_forbidden_nullForbidden
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaSByte_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaSByte_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaSByte_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaSByte_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaUInt16_scalar_forbidden_nullForbidden
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt16_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt16_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaUInt16_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaUInt16_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaInt16_scalar_forbidden_nullForbidden
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt16_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt16_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaInt16_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaInt16_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaUInt32_scalar_forbidden_nullForbidden
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt32_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt32_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaUInt32_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaUInt32_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaInt32_scalar_forbidden_nullForbidden
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt32_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt32_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaInt32_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaInt32_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaUInt64_scalar_forbidden_nullForbidden
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt64_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt64_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaUInt64_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaUInt64_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaInt64_scalar_forbidden_nullForbidden
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt64_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt64_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaInt64_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaInt64_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaDouble_scalar_forbidden_nullForbidden
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaDouble_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaDouble_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaDouble_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaDouble_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaFloat_scalar_forbidden_nullForbidden
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaFloat_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaFloat_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaFloat_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaFloat_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_UaString_scalar_forbidden_nullForbidden
        UaString test_value ("abcde");
        getAddressSpaceLink()->setValueAndStatus_UaString_scalar_forbidden_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_UaString_scalar_forbidden_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_UaString_scalar_forbidden_nullForbidden();
    } // scenario name: valueAndStatus_UaString_scalar_forbidden_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaBoolean_scalar_forbidden_nullAllowed
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setValueAndStatus_OpcUaBoolean_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaBoolean_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaBoolean_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaBoolean_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaByte_scalar_forbidden_nullAllowed
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaByte_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaByte_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaByte_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaByte_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaSByte_scalar_forbidden_nullAllowed
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaSByte_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaSByte_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaSByte_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaSByte_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaUInt16_scalar_forbidden_nullAllowed
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt16_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt16_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaUInt16_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaUInt16_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaInt16_scalar_forbidden_nullAllowed
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt16_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt16_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaInt16_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaInt16_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaUInt32_scalar_forbidden_nullAllowed
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt32_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt32_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaUInt32_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaUInt32_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaInt32_scalar_forbidden_nullAllowed
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt32_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt32_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaInt32_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaInt32_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaUInt64_scalar_forbidden_nullAllowed
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt64_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt64_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaUInt64_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaUInt64_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaInt64_scalar_forbidden_nullAllowed
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt64_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt64_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaInt64_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaInt64_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaDouble_scalar_forbidden_nullAllowed
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaDouble_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaDouble_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaDouble_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaDouble_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaFloat_scalar_forbidden_nullAllowed
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaFloat_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaFloat_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaFloat_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaFloat_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_UaString_scalar_forbidden_nullAllowed
        UaString test_value ("abcde");
        getAddressSpaceLink()->setValueAndStatus_UaString_scalar_forbidden_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_UaString_scalar_forbidden_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_UaString_scalar_forbidden_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_UaString_scalar_forbidden_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaBoolean_scalar_delegated_nullForbidden
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setValueAndStatus_OpcUaBoolean_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaBoolean_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaBoolean_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaBoolean_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaByte_scalar_delegated_nullForbidden
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaByte_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaByte_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaByte_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaByte_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaSByte_scalar_delegated_nullForbidden
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaSByte_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaSByte_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaSByte_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaSByte_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaUInt16_scalar_delegated_nullForbidden
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt16_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt16_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaUInt16_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaUInt16_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaInt16_scalar_delegated_nullForbidden
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt16_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt16_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaInt16_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaInt16_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaUInt32_scalar_delegated_nullForbidden
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt32_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt32_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaUInt32_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaUInt32_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaInt32_scalar_delegated_nullForbidden
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt32_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt32_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaInt32_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaInt32_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaUInt64_scalar_delegated_nullForbidden
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt64_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt64_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaUInt64_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaUInt64_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaInt64_scalar_delegated_nullForbidden
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt64_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt64_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaInt64_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaInt64_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaDouble_scalar_delegated_nullForbidden
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaDouble_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaDouble_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaDouble_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaDouble_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaFloat_scalar_delegated_nullForbidden
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaFloat_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaFloat_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_OpcUaFloat_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_OpcUaFloat_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_UaString_scalar_delegated_nullForbidden
        UaString test_value ("abcde");
        getAddressSpaceLink()->setValueAndStatus_UaString_scalar_delegated_nullForbidden(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_UaString_scalar_delegated_nullForbidden(test_value);
        test_value = getAddressSpaceLink()->getValueAndStatus_UaString_scalar_delegated_nullForbidden();
    } // scenario name: valueAndStatus_UaString_scalar_delegated_nullForbidden
    {   // scenario name: valueAndStatus_OpcUaBoolean_scalar_delegated_nullAllowed
        OpcUa_Boolean test_value (OpcUa_True);
        getAddressSpaceLink()->setValueAndStatus_OpcUaBoolean_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaBoolean_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaBoolean_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaBoolean_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaByte_scalar_delegated_nullAllowed
        OpcUa_Byte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaByte_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaByte_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaByte_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaByte_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaSByte_scalar_delegated_nullAllowed
        OpcUa_SByte test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaSByte_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaSByte_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaSByte_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaSByte_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaUInt16_scalar_delegated_nullAllowed
        OpcUa_UInt16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt16_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt16_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaUInt16_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaUInt16_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaInt16_scalar_delegated_nullAllowed
        OpcUa_Int16 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt16_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt16_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaInt16_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaInt16_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaUInt32_scalar_delegated_nullAllowed
        OpcUa_UInt32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt32_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt32_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaUInt32_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaUInt32_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaInt32_scalar_delegated_nullAllowed
        OpcUa_Int32 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt32_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt32_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaInt32_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaInt32_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaUInt64_scalar_delegated_nullAllowed
        OpcUa_UInt64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaUInt64_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaUInt64_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaUInt64_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaUInt64_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaInt64_scalar_delegated_nullAllowed
        OpcUa_Int64 test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaInt64_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaInt64_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaInt64_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaInt64_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaDouble_scalar_delegated_nullAllowed
        OpcUa_Double test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaDouble_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaDouble_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaDouble_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaDouble_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_OpcUaFloat_scalar_delegated_nullAllowed
        OpcUa_Float test_value (69);
        getAddressSpaceLink()->setValueAndStatus_OpcUaFloat_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_OpcUaFloat_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_OpcUaFloat_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_OpcUaFloat_scalar_delegated_nullAllowed
    {   // scenario name: valueAndStatus_UaString_scalar_delegated_nullAllowed
        UaString test_value ("abcde");
        getAddressSpaceLink()->setValueAndStatus_UaString_scalar_delegated_nullAllowed(test_value, OpcUa_Good);
        getAddressSpaceLink()->getValueAndStatus_UaString_scalar_delegated_nullAllowed(test_value);
        getAddressSpaceLink()->setNullValueAndStatus_UaString_scalar_delegated_nullAllowed(OpcUa_Good);
    } // scenario name: valueAndStatus_UaString_scalar_delegated_nullAllowed

}


}


