
/*  Â© Copyright CERN, 2015. All rights not expressly granted are reserved.

    The stub of this file was generated by quasar (https://github.com/quasar-team/quasar/)

    Quasar is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public Licence as published by
    the Free Software Foundation, either version 3 of the Licence.
    Quasar is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public Licence for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Quasar.  If not, see <http://www.gnu.org/licenses/>.


 */


#ifndef __DTestClass__H__
#define __DTestClass__H__

#include <vector>                  // TODO; should go away, is already in Base class for ages
#include <boost/thread/mutex.hpp>  // TODO; should go away, is already in Base class for ages

#include <statuscode.h>            // TODO; should go away, is already in Base class for ages
#include <uadatetime.h>            // TODO; should go away, is already in Base class for ages
#include <session.h>               // TODO; should go away, is already in Base class for ages

#include <DRoot.h>                 // TODO; should go away, is already in Base class for ages
#include <Configuration.hxx>       // TODO; should go away, is already in Base class for ages

#include <Base_DTestClass.h>

namespace Device
{

class
    DTestClass
    : public Base_DTestClass
{

public:
    /* sample constructor */
    explicit DTestClass (
        const Configuration::TestClass& config,
        Parent_DTestClass* parent
    ) ;
    /* sample dtr */
    ~DTestClass ();

    /* delegators for
    cachevariables and sourcevariables */
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaBoolean_scalar_delegated_nullForbidden ( const OpcUa_Boolean& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaByte_scalar_delegated_nullForbidden ( const OpcUa_Byte& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaSByte_scalar_delegated_nullForbidden ( const OpcUa_SByte& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt16_scalar_delegated_nullForbidden ( const OpcUa_UInt16& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt16_scalar_delegated_nullForbidden ( const OpcUa_Int16& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt32_scalar_delegated_nullForbidden ( const OpcUa_UInt32& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt32_scalar_delegated_nullForbidden ( const OpcUa_Int32& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt64_scalar_delegated_nullForbidden ( const OpcUa_UInt64& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt64_scalar_delegated_nullForbidden ( const OpcUa_Int64& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaDouble_scalar_delegated_nullForbidden ( const OpcUa_Double& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaFloat_scalar_delegated_nullForbidden ( const OpcUa_Float& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_UaString_scalar_delegated_nullForbidden ( const UaString& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaBoolean_scalar_delegated_nullAllowed ( const OpcUa_Boolean& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaByte_scalar_delegated_nullAllowed ( const OpcUa_Byte& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaSByte_scalar_delegated_nullAllowed ( const OpcUa_SByte& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt16_scalar_delegated_nullAllowed ( const OpcUa_UInt16& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt16_scalar_delegated_nullAllowed ( const OpcUa_Int16& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt32_scalar_delegated_nullAllowed ( const OpcUa_UInt32& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt32_scalar_delegated_nullAllowed ( const OpcUa_Int32& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt64_scalar_delegated_nullAllowed ( const OpcUa_UInt64& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt64_scalar_delegated_nullAllowed ( const OpcUa_Int64& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaDouble_scalar_delegated_nullAllowed ( const OpcUa_Double& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaFloat_scalar_delegated_nullAllowed ( const OpcUa_Float& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_UaString_scalar_delegated_nullAllowed ( const UaString& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaBoolean_array_delegated_nullForbidden ( const std::vector<OpcUa_Boolean>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaByte_array_delegated_nullForbidden ( const std::vector<OpcUa_Byte>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaSByte_array_delegated_nullForbidden ( const std::vector<OpcUa_SByte>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt16_array_delegated_nullForbidden ( const std::vector<OpcUa_UInt16>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt16_array_delegated_nullForbidden ( const std::vector<OpcUa_Int16>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt32_array_delegated_nullForbidden ( const std::vector<OpcUa_UInt32>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt32_array_delegated_nullForbidden ( const std::vector<OpcUa_Int32>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt64_array_delegated_nullForbidden ( const std::vector<OpcUa_UInt64>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt64_array_delegated_nullForbidden ( const std::vector<OpcUa_Int64>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaDouble_array_delegated_nullForbidden ( const std::vector<OpcUa_Double>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaFloat_array_delegated_nullForbidden ( const std::vector<OpcUa_Float>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_UaString_array_delegated_nullForbidden ( const std::vector<UaString>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaBoolean_array_delegated_nullAllowed ( const std::vector<OpcUa_Boolean>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaByte_array_delegated_nullAllowed ( const std::vector<OpcUa_Byte>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaSByte_array_delegated_nullAllowed ( const std::vector<OpcUa_SByte>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt16_array_delegated_nullAllowed ( const std::vector<OpcUa_UInt16>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt16_array_delegated_nullAllowed ( const std::vector<OpcUa_Int16>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt32_array_delegated_nullAllowed ( const std::vector<OpcUa_UInt32>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt32_array_delegated_nullAllowed ( const std::vector<OpcUa_Int32>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaUInt64_array_delegated_nullAllowed ( const std::vector<OpcUa_UInt64>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaInt64_array_delegated_nullAllowed ( const std::vector<OpcUa_Int64>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaDouble_array_delegated_nullAllowed ( const std::vector<OpcUa_Double>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_OpcUaFloat_array_delegated_nullAllowed ( const std::vector<OpcUa_Float>& v);
    /* Note: never directly call this function. */
    UaStatus writeConfiguration_UaString_array_delegated_nullAllowed ( const std::vector<UaString>& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaBoolean_scalar_delegated_nullForbidden ( const OpcUa_Boolean& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaByte_scalar_delegated_nullForbidden ( const OpcUa_Byte& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaSByte_scalar_delegated_nullForbidden ( const OpcUa_SByte& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaUInt16_scalar_delegated_nullForbidden ( const OpcUa_UInt16& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaInt16_scalar_delegated_nullForbidden ( const OpcUa_Int16& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaUInt32_scalar_delegated_nullForbidden ( const OpcUa_UInt32& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaInt32_scalar_delegated_nullForbidden ( const OpcUa_Int32& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaUInt64_scalar_delegated_nullForbidden ( const OpcUa_UInt64& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaInt64_scalar_delegated_nullForbidden ( const OpcUa_Int64& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaDouble_scalar_delegated_nullForbidden ( const OpcUa_Double& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaFloat_scalar_delegated_nullForbidden ( const OpcUa_Float& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_UaString_scalar_delegated_nullForbidden ( const UaString& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaBoolean_scalar_delegated_nullAllowed ( const OpcUa_Boolean& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaByte_scalar_delegated_nullAllowed ( const OpcUa_Byte& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaSByte_scalar_delegated_nullAllowed ( const OpcUa_SByte& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaUInt16_scalar_delegated_nullAllowed ( const OpcUa_UInt16& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaInt16_scalar_delegated_nullAllowed ( const OpcUa_Int16& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaUInt32_scalar_delegated_nullAllowed ( const OpcUa_UInt32& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaInt32_scalar_delegated_nullAllowed ( const OpcUa_Int32& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaUInt64_scalar_delegated_nullAllowed ( const OpcUa_UInt64& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaInt64_scalar_delegated_nullAllowed ( const OpcUa_Int64& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaDouble_scalar_delegated_nullAllowed ( const OpcUa_Double& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_OpcUaFloat_scalar_delegated_nullAllowed ( const OpcUa_Float& v);
    /* Note: never directly call this function. */
    UaStatus writeValueAndStatus_UaString_scalar_delegated_nullAllowed ( const UaString& v);


    /* delegators for methods */

private:
    /* Delete copy constructor and assignment operator */
    DTestClass( const DTestClass& other );
    DTestClass& operator=(const DTestClass& other);

    // ----------------------------------------------------------------------- *
    // -     CUSTOM CODE STARTS BELOW THIS COMMENT.                            *
    // -     Don't change this comment, otherwise merge tool may be troubled.  *
    // ----------------------------------------------------------------------- *

public:
    void testSettersGetters ();

private:



};

}

#endif // __DTestClass__H__
